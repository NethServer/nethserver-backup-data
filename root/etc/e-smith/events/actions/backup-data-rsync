#!/usr/bin/perl -w

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;
use File::Temp;
use NethServer::BackupData;
use NethServer::Rsync;

use constant CMD => '/usr/bin/rsync_tmbackup';

my $name = $ARGV[0] || die("No name given");

my $confdb = esmith::ConfigDB->open;
my $systemname = $confdb->get('SystemName') or die "No SystemName db entry found\n";
$systemname = $systemname->prop('type');

my $db = esmith::ConfigDB->open_ro('backups') || die("Could not open backups db\n");
my $record = $db->get($name) || die("No backup '$name' found");

my $VFSType = $record->prop('VFSType') || die("No VFSType specified");
my $port = $record->prop('SftpPort') || '22';
my $backup = new NethServer::BackupData();


# Read include and exclude from default directory or customized file
my @include_data_files;
my @exclude_data_files;

if ( -f "/etc/backup-data/$name.include" ) {
    @include_data_files = $backup->load_file_list("/etc/backup-data/$name.include");
} else {
    @include_data_files = $backup->includes($backup->get_config_dir());
}

if ( -f "/etc/backup-data/$name.exclude" ) {
    @exclude_data_files = $backup->load_file_list("/etc/backup-data/$name.exclude");
} else {
    @exclude_data_files = $backup->excludes($backup->get_config_dir());
}

if (!@include_data_files) {
    error("Nothing to backup");
}

# Create globbing file list
my $tmp_include = File::Temp->new(UNLINK => 1);
chmod(0600,$tmp_include->filename);

my $tmp_exclude = File::Temp->new(UNLINK => 1);
chmod(0600,$tmp_exclude->filename);

$backup->uniq(\@include_data_files);
$backup->uniq(\@exclude_data_files);

foreach  (@exclude_data_files) {
   print $tmp_exclude "$_\n";
}
foreach  (@include_data_files) {
   print $tmp_include "$_\n";
}

my $opts = NethServer::Rsync::initOptions($tmp_include, $tmp_exclude);
my $repo = NethServer::Rsync::prepareRepository($systemname, $record);

my $ret = system(CMD." -p $port $opts / $repo");

if ($ret != 0) {
   error("Backup failed");
   exit 1; 
}

if ( -x "/etc/e-smith/events/actions/umount-$VFSType" ) {
    $backup->disk_usage($name);
    system("/etc/e-smith/events/actions/umount-$VFSType fake-event $name");
}

exit (0);

sub error {
    my $msg = shift;
    print sprintf("$msg\n",@_);
    exit 1;
}
