#!/usr/bin/perl -w

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use Errno;
use esmith::ConfigDB;
use NethServer::BackupData;

# The action must be invoked at least with 1 parameter: an event name (could be a fake one)
# If a second parameter is passed, it must be a valid key inside the backups db
my $event = shift || die("No event given");
my $name = shift || die("No name given");

my $db = esmith::ConfigDB->open_ro('backups') || die("Could not open backups db\n");

my $mntdir = "/mnt/backup-$name";
my $backupwk = $db->get($name) || die("No '$name' db entry found\n");

my $VFSType = $backupwk->prop('VFSType') || 'UNKNOWN';
my $smbhost = $backupwk->prop('SMBHost');
my $smbshare = $backupwk->prop('SMBShare');

exit 0 unless ($VFSType eq 'cifs');

my $b = new NethServer::BackupData();

# check if backp directory is mounted and umount
if ($b->is_mounted("\/$smbhost(.*)\/$smbshare") or $b->is_mounted($mntdir)) {
    system("/bin/umount", "$mntdir");
}

exit 0;

