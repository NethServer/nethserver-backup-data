#!/usr/bin/perl -w

#
# Copyright (C) 2017 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use Errno;
use esmith::ConfigDB;
use NethServer::BackupData;
use JSON;

my $confdb = esmith::ConfigDB->open;
my $backupwk = $confdb->get('backup-data') or die "No backup-data db entry found\n";
my $VFSType = $backupwk->prop('VFSType') || 'UNKNOWN';
my $mntdir = $backupwk->prop('Mount') || '/mnt/backup';
my $duLogFile = '/var/lib/nethserver/backup/disk_usage';
my $err = 0;
my %du;

my $backup = new NethServer::BackupData();


if ( ($VFSType eq 'usb') || ($VFSType eq 'nfs') || ($VFSType eq 'cifs') || ($VFSType eq 'webdav') ) {
    if ($backup->is_mounted($mntdir)) {

        # get disk usage stats
        if ( @du{qw(source size used avail pcent target)} = split(" ", `/bin/df -P "$mntdir" 2>/dev/null | grep "$mntdir"`) ) {
            delete @du{'source', 'target'};
            $du{'pcent'} = sprintf "%.2f", $du{'used'}/$du{'size'}*100;
            $du{'pcent'} += 0;

            if ( $du{'used'} lt 0 || $du{'avail'} lt 0 ) {
                warn("[WARNING] Unable to determine backup storage capacity.\n");
                @du{'size', 'used', 'avail', 'pcent'} = undef;
            }

            # output disk usage to file
            open(FILE, ">$duLogFile");
            print FILE encode_json(\%du);
            close(FILE);
        }
    }
} else {
   $backup->logger("ERROR","No valid VFSType ($VFSType) - 1");
   exit 1;
}

exit 0;
