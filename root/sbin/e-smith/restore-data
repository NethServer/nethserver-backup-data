#! /usr/bin/perl -w
#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;
use NethServer::BackupConfig;
use Getopt::Std;
use POSIX qw/strftime/;

sub print_help
{
    print "Usage $0 [-b <backup_name>] [-h]\n";
    print "  -b : specify the name of backup to restore\n";
    print "  -h : show this help\n";
}

my %options=();
getopts("hb:", \%options);
my $help = $options{h};
my $name = $options{b} || die("No name given");

if ($help)
{
  print_help();
  exit(0);
}

my $status;
my $db = esmith::ConfigDB->open_ro('backups') || die("Could not open backups db\n");
my $backup = $db->get($name) || die("No backup '$name' found");
my $program = $backup->prop('type') || 'duplicity';
my $restore_action = "/etc/e-smith/events/actions/restore-data-$program -b $name";

$backup = new NethServer::BackupConfig($name);

my $start = time;
out("Restore started at %s", strftime('%F %T',localtime));

if ($status = system("/sbin/e-smith/signal-event pre-restore-data $name"))
{
    error("Event pre-restore-data failed");
}
out("Event pre-restore-data: SUCCESS");

if ($status = system($restore_action))
{
    error("Action restore-data-$program failed");
}
out("Action '$restore_action': SUCCESS");

if ($status = system("/sbin/e-smith/signal-event post-restore-data $name"))
{
    error("Event post-restore-data failed");
}

out("Event post-restore-data: SUCCESS");
out("Restore ended at %s", strftime('%F %T',localtime));
my $duration = time - $start;
out("Time elapsed: %s hours, %s minutes, %s seconds", ($duration/(60*60))%24, ($duration/60)%60, $duration%60);

exit 0;

sub out {
    my $msg = shift;
    print sprintf("$msg\n",@_);
}

sub error {
    out($@);
    out("Restore: FAIL");
    exit 1;
}

