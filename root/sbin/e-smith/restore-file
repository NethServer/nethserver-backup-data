#!/usr/bin/perl -w

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;
use File::Path;
use Getopt::Std;

sub print_help
{
    print "Usage $0 [-t <days>] [-h] <target_dir> <file_to_restore> ... <file_to_restore>\n";
    print "  -t : specify the time from which to restore or list files\n";
    print "  -h : show this help\n";
}

my %options=();
getopts("ht:", \%options);
my $help = $options{h};
my $time = $options{t} || '';

if ($help)
{
  print_help();
  exit(0);
}


my $dst_path = shift @ARGV || '/';
my @files;

foreach (@ARGV) {
    if ( $_ =~ /^\// ) { #remove leading slash
        push(@files,substr($_,1));
    } else {
        push(@files,$_);
    }
}

my $confdb = esmith::ConfigDB->open;
my $backupwk = $confdb->get('backup-data') or die "No backup-data db entry found\n";
my $VFSType = $backupwk->prop('VFSType') || 'UNKNOWN';


if ( ($VFSType eq 'usb') || ($VFSType eq 'nfs') || ($VFSType eq 'cifs') || ($VFSType eq 'webdav') ) {
   system("/etc/e-smith/events/actions/mount-$VFSType");

   my @args = ("/etc/e-smith/events/actions/restore-data-duplicity");
   if ($time) {
       push(@args, "-t");
       push(@args, $time);
   }
   push(@args,  $dst_path);
   foreach (@files) {
       push(@args, '--file-to-restore');
       push(@args, $_);
   }
   system(@args);

   system("/etc/e-smith/events/actions/umount-$VFSType");
}

exit (0);

