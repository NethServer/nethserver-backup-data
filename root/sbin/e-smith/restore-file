#!/usr/bin/perl -w

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;
use File::Path;
use Getopt::Std;

sub print_help
{
    print "Usage $0 [-t <days>] [-b <backup_name>] [-h] <target_dir> <file_to_restore> ... <file_to_restore>\n";
    print "  -t : specify the time or the snapshot from which to restore or list files\n";
    print "  -b : specify the name of backup to restore\n";
    print "  -h : show this help\n";
}

my %options=();
getopts("ht:b:", \%options);
my $help = $options{h};
my $time = $options{t} || '';
my $name = $options{b} || die("No name given");

if ($help)
{
  print_help();
  exit(0);
}


my $dst_path = shift @ARGV || '/';
my @files;

foreach (@ARGV) {
    if ( $_ =~ /^\// ) { #remove leading slash
        push(@files,substr($_,1));
    } else {
        push(@files,$_);
    }
}

my $db = esmith::ConfigDB->open_ro('backups') || die("Could not open backups db\n");
my $backupwk = $db->get($name) || die("No backup '$name' found");
my $program = $backupwk->prop('type');
# Fail early if backup disabled since nfs, cifs and usb mounts will not be avaible
my $backup_status = $backupwk->prop('status') || 'disabled';
die("Backup $name is disabled") if ($backup_status eq 'disabled');

my $VFSType = $backupwk->prop('VFSType') || 'UNKNOWN';


if (-x "/etc/e-smith/events/actions/mount-$VFSType") {
    system("/etc/e-smith/events/actions/mount-$VFSType fake-event $name")
}

my @args = ("/etc/e-smith/events/actions/restore-data-$program");
if ($time) {
    push(@args, "-t");
    push(@args, $time);
}

push(@args, "-b");
push(@args, $name);

push(@args,  $dst_path);
foreach (@files) {
    push(@args, $_);
}
my $ret = system(@args);

if (-x "/etc/e-smith/events/actions/umount-$VFSType") {
    system("/etc/e-smith/events/actions/umount-$VFSType fake-event $name");
}

if ($ret > 0) {
    exit 1;
} else {
    exit 0;
}

